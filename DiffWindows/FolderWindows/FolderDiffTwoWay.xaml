<UserControl x:Class="DiffWindows.FolderWindows.FolderDiffTwoWay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:diff="clr-namespace:DiffIntegration.DiffFilesystemTree;assembly=DiffIntegration"
             xmlns:folderWindows="clr-namespace:DiffWindows.FolderWindows"
             xmlns:converters="clr-namespace:DiffWindows.FolderWindows.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             SizeChanged="FolderDiff2Way_OnSizeChanged"
             x:Name="UserControl">

    <UserControl.Resources>
        <!--TreeViewItem based on template from
        http://leecampbell.blogspot.cz/2009/01/horizontal-stretch-on-treeviewitems.html-->
        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <EventSetter Event="MouseDoubleClick" Handler="OnItemMouseDoubleClick" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Focusable" Value="false" />
                                            <Setter Property="Width" Value="16" />
                                            <Setter Property="Height" Value="16" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="#00FFFFFF" Width="19" Height="13">
                                                            <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF7898B5" Width="9" Height="9" SnapsToDevicePixels="True" Name="ExpandBorder">
                                                                <Border.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                        <LinearGradientBrush.GradientStops>
                                                                            <GradientStop Color="#FFFFFFFF" Offset="0.2" />
                                                                            <GradientStop Color="#FFC0B7A6" Offset="1" />
                                                                        </LinearGradientBrush.GradientStops>
                                                                    </LinearGradientBrush>
                                                                </Border.Background>
                                                                <Path Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z" Fill="#FF000000" Name="ExpandPath" Margin="1,1,1,1" />
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#666666" />
                                                                <Setter TargetName="ExpandBorder" Property="BorderBrush" Value="#666666" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter Property="Path.Data" TargetName="ExpandPath">
                                                                    <Setter.Value>
                                                                        <StreamGeometry>M0,2L0,3 5,3 5,2z</StreamGeometry>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd" HorizontalAlignment="Stretch" 
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Padding="{TemplateBinding Border.Padding}"
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True"
                                        Grid.Column="1"
                                        Grid.Row="0">
                                    <Border.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderBrush" Value="LightGray" />
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                        </Style>
                                    </Border.Resources>
                                    <ContentPresenter x:Name="PART_Header"
                                                      Content="{TemplateBinding HeaderedContentControl.Header}"
                                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                      ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                      ContentSource="Header"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid Background="White">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="10"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="10" />
        </Grid.ColumnDefinitions>

        <Label 
            x:Name="FilePathLabel"
            Grid.Column="1"
            Grid.Row="1"
            Background="LightGray"
            Content="{Binding ElementName=UserControl, Path=LocalFolderLocation}"></Label>

        <Label 
            Grid.Column="3"
            Grid.Row="1"
            Background="LightGray"
            Content="{Binding ElementName=UserControl, Path=RemoteFolderLocation}"></Label>

        <TreeView Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3"
            Grid.IsSharedSizeScope="True"
            x:Name="TreeView"
            BorderBrush="{x:Null}"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch">

            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type diff:DiffDirNode}" ItemsSource="{Binding Path=FilesAndDirectories}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <Image Height="13" Margin="0,0,4,0">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="/Resources/folder.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                                                <Setter Property="Source" Value="/Resources/folder_open.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                                <!--{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}-->
                            </Image>
                            <TextBlock Text="{Binding Path=Info}" FontWeight="Bold" Foreground="Black" FontFamily="Consolas" FontSize="13" ></TextBlock>
                        </StackPanel>
                    </Grid>
                </HierarchicalDataTemplate>

                <DataTemplate DataType="{x:Type diff:DiffFileNode}">
                    <Border HorizontalAlignment="Stretch">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="FDiffStatus" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="FSizeLocal" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="FTimeLocal" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="FSizeRemote" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="FTimeRemote" />
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Horizontal">
                                <Image Source="/Resources/list.png" Height="13" Margin="0,0,4,0" />
                                <TextBlock  Text="{Binding Path=Info}" FontFamily="Consolas" FontSize="13" HorizontalAlignment="Stretch" Padding="0,2,0,2"></TextBlock>
                            </StackPanel>


                            <Border Grid.Column="1" Grid.ColumnSpan="5">
                                <Border.Background>
                                    <MultiBinding Converter="{converters:DiffToBackgroundConverter}">
                                        <Binding Path="Location" />
                                        <Binding Path="Differences" />
                                    </MultiBinding>
                                </Border.Background>
                                
                            </Border>
                            <!--<StackPanel Grid.Column="1" Orientation="Horizontal" >-->

                            <!--<TextBlock  Text="{Binding Path=Info.LastWriteTime}" FontFamily="Consolas" FontSize="13" HorizontalAlignment="Stretch"></TextBlock>-->
                            <TextBlock Grid.Column="1" Text="{Binding Path=Differences, Converter={converters:DifferencesTextConverter}}" FontFamily="Consolas" FontSize="13" Padding="30,2,6,2"></TextBlock>
                            <TextBlock Grid.Column="2" Text="{Binding Path=InfoLocal, Converter={converters:SizeConverter}}" FontFamily="Consolas" FontSize="13" Padding="6,2,6,2" TextAlignment="Right"></TextBlock>
                            <TextBlock Grid.Column="4" Text="{Binding Path=InfoRemote, Converter={converters:SizeConverter}}" FontFamily="Consolas" FontSize="13" Padding="6,2,6,2" TextAlignment="Right"></TextBlock>
                            
                            <TextBlock Grid.Column="3" Text="{Binding Path=InfoLocal, Converter={converters:TimestampConverter}}" FontFamily="Consolas" FontSize="13" Padding="6,2,6,2" TextAlignment="Right"></TextBlock>
                            <TextBlock Grid.Column="5" Text="{Binding Path=InfoRemote, Converter={converters:TimestampConverter}}" FontFamily="Consolas" FontSize="13" Padding="6,2,6,2" TextAlignment="Right"></TextBlock>
                            <!--<TextBlock Grid.Column="1" Text="{Binding Path=Info, Converter={loc:TimeFormatConverter}}" FontFamily="Consolas" FontSize="13" HorizontalAlignment="Stretch"></TextBlock>-->
                            <!--</StackPanel>-->
                        </Grid>
                    </Border>
                </DataTemplate>
            </TreeView.Resources>

        </TreeView>

    </Grid>
</UserControl>
